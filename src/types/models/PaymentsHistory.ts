/* tslint:disable */
/* eslint-disable */
/**
 * Gym Manager Swagger
 * Gym Manager REST API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Membership } from './Membership';
import {
    MembershipFromJSON,
    MembershipFromJSONTyped,
    MembershipToJSON,
    MembershipToJSONTyped,
} from './Membership';

/**
 * 결제 내역 테이블
 * @export
 * @interface PaymentsHistory
 */
export interface PaymentsHistory {
    /**
     * 회원 명
     * @type {string}
     * @memberof PaymentsHistory
     */
    memberName?: string;
    /**
     * 회원 시퀀스
     * @type {number}
     * @memberof PaymentsHistory
     */
    memberSeq?: number;
    /**
     * 
     * @type {Membership}
     * @memberof PaymentsHistory
     */
    membership?: Membership;
    /**
     * 회원권 시퀀스
     * @type {number}
     * @memberof PaymentsHistory
     */
    membershipSeq?: number;
    /**
     * 결제자 명
     * @type {string}
     * @memberof PaymentsHistory
     */
    phName?: string;
    /**
     * 결제 금액
     * @type {number}
     * @memberof PaymentsHistory
     */
    phPrice?: number;
    /**
     * 결제내역 시퀀스
     * @type {number}
     * @memberof PaymentsHistory
     */
    phSeq?: number;
    /**
     * 결제 방법
     * @type {string}
     * @memberof PaymentsHistory
     */
    phType?: string;
    /**
     * 결제 일자
     * @type {Date}
     * @memberof PaymentsHistory
     */
    regDate?: Date;
}

/**
 * Check if a given object implements the PaymentsHistory interface.
 */
export function instanceOfPaymentsHistory(value: object): value is PaymentsHistory {
    return true;
}

export function PaymentsHistoryFromJSON(json: any): PaymentsHistory {
    return PaymentsHistoryFromJSONTyped(json, false);
}

export function PaymentsHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentsHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'memberName': json['memberName'] == null ? undefined : json['memberName'],
        'memberSeq': json['memberSeq'] == null ? undefined : json['memberSeq'],
        'membership': json['membership'] == null ? undefined : MembershipFromJSON(json['membership']),
        'membershipSeq': json['membershipSeq'] == null ? undefined : json['membershipSeq'],
        'phName': json['phName'] == null ? undefined : json['phName'],
        'phPrice': json['phPrice'] == null ? undefined : json['phPrice'],
        'phSeq': json['phSeq'] == null ? undefined : json['phSeq'],
        'phType': json['phType'] == null ? undefined : json['phType'],
        'regDate': json['regDate'] == null ? undefined : (new Date(json['regDate'])),
    };
}

export function PaymentsHistoryToJSON(json: any): PaymentsHistory {
    return PaymentsHistoryToJSONTyped(json, false);
}

export function PaymentsHistoryToJSONTyped(value?: PaymentsHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'memberName': value['memberName'],
        'memberSeq': value['memberSeq'],
        'membership': MembershipToJSON(value['membership']),
        'membershipSeq': value['membershipSeq'],
        'phName': value['phName'],
        'phPrice': value['phPrice'],
        'phSeq': value['phSeq'],
        'phType': value['phType'],
        'regDate': value['regDate'] == null ? undefined : ((value['regDate']).toISOString()),
    };
}

